[-][BLOCK COMMENT
only numbers 1-8 are considered valid inputs;
inputs must be in the form of 
input: "pair$input_or_null" where:
  pair: "num,num" 
  input_or_null: "input" or ""
  $ is newline]
>
newline 010 >++[-<+++++>]
zero 48 >>>++++[-<++++[-<+++<+++>>]>]<
one 49 <+>
comma 044 >++++[-<+++++++++++>]
>

pairs setup ,[>,,assumes 1digit nums]
to i >

dummy matrix gen
to matrix >>>
  >>> [dec 033 (exclamation): >+++[<+++++++++++>-]<]
  + > + > + > + > + > + > + > + > + > >>>
  + > + > + > + > + > + > + > + > + > >>>
  + > + > + > + > + > + > + > + > + > >>>
  + > + > + > + > + > + > + > + > + > >>>
  + > + > + > + > + > + > + > + > + > >>>
  + > + > + > + > + > + > + > + > + > >>>
  + > + > + > + > + > + > + > + > + > >>>
  + > + > + > + > + > + > + > + > + > >>>
  + > + > + > + > + > + > + > + > + > >>>
to pairs start
  to i <<<<[[<]<<<]<<
  <<[<]>

indexing from pairs start
  [
    grab first pair
      [
        to i [>]>+
        <<[<]>
      -]
      >[
        to j [>]>>+
        <<<[<]>
      -]
      to j >[>]>
        minus chr(0) ------------------------------------------------
      [>]<
        minus chr(0) ------------------------------------------------

    insert edge from j
      [
        to matrix end 
        >>>>>
          [
            to after true row [>]
            to after shmow >[>]
            >>
          ]<
        BUGS SEMATARY
        <<[<]<
        [
          move elem right [->+<]
          to before row (is next row first) <[<]

          <<[<]<
        ]
        decrement j <-
      ]<
    insert edge from i
      [
        to true cols end
          >>>>>>
          [
            to after true row [>]
            to after shmow >[>]
            >>
          ]<
        move last row twice
          {
            <<
            move shmow [[->>+<<]<]< and true row [[->>+<<]<]<            
          }<
        [[[<]<]<]
        <<<
        decrement i -
      ]
    to matrix end
      >>>>>>
      [[[>]>[>]>>]>>]<<<<< SHMOW ALWAYS EXISTS AT THIS POINT   NO ZEROS ALLOWED IN INPUT
    to first shmol [[[<]<]<<]>>>>
    to row end [>]<
    to shmow start >>
    [-]+++++++ +++++++ +++++++ +++++++ +++++++ +++++++ +++++++ 
    bring order to chaos
      from target in shmow shmol to cur shmol start <<[<]>
      move all shmows twice [[[[-<<+>>]>]>]>]
      <<<<<
      align all rows
        [
          from shmow end [<]>[[-<+>]>]<<[<]<<
        ]
      <<<<<<
  ]

cut extra off
  >>>>>>>>>
  ASSUMING PLACEHOLDER IS 001
  ASSUMING NUMBERS 1 THOUGH 8 AS INPUTS {right}rightrightright
  scroll until 001 and cut rows
    [
      [-
        break on non 1 and mend minus[+[>]]
        mend and continue +>
      ]>>
      [<<<-<->>] end in the middle if 1 end on the right if no 1
    >]
  <<<[<]
  nip sensually (to demark) [<<<->>>]
  nip repeatedly
    {
      trim first elems [->[[-<+>]>]>>>]
      <<<<<
      move back and move rows left
        [[< walk without rhythm instead mb?]>-
          teleport on 1 {+smth-}
        +]
        move row left [[-<+>]>]
        to next row
    }
print

#############################################
all: 0 charset 0 pairs 0 i j 0 matrix 0 shmatrix 0 0 0

charset: C C C...
pairs: 0... a b a b...; starts with 0 zeros
matrix: 0 0 0 row 0 0 row 0 0...row 0 0 0 0 shmol 0 0 shmol 0 0... ; 9x9 array
row: a b c d... 0 shmow; shmow starts empty

comments ###############

the walk without rhythm:
0    0    a    b    c    0<
0    0    a    b+c  c-0< 0
0    0    a+b  b<   c-0  0
0    0+a  a<   b    c-0  0
0+0  0<   a    b    c-0  0

I.E.:
0    0    a    b    c<   0
0    0    a    b    c-0< 0
0    0    a    b+c  c-0< 0
0    0    a    b+c< c-0  0